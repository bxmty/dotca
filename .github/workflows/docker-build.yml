name: Build and Push to GHCR

on:
  push:
    branches: [ main, staging ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'package-lock.json'
      - 'Dockerfile'
      - 'Dockerfile.dev'
      - 'next.config.js'
      - 'tsconfig.json'
      - 'jest.config.js'
      - 'eslint.config.mjs'
      - '.github/workflows/docker-build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'package-lock.json'
      - 'Dockerfile'
      - 'Dockerfile.dev'
      - 'next.config.js'
      - 'tsconfig.json'
      - 'jest.config.js'
      - 'eslint.config.mjs'
      - '.github/workflows/docker-build.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      docker: ${{ steps.changes.outputs.docker }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Check for changes
      uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          docker:
            - 'src/**'
            - 'public/**'
            - 'package.json'
            - 'package-lock.json'
            - 'Dockerfile'
            - 'Dockerfile.dev'
            - 'next.config.js'
            - 'tsconfig.json'
            - 'jest.config.js'
            - 'eslint.config.mjs'
            - '.github/workflows/docker-build.yml'

  build-and-push:
    needs: changes
    if: ${{ needs.changes.outputs.docker == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: |
          type=gha
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
        cache-to: |
          type=gha,mode=max
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
        build-args: |
          NODE_ENV=production
          NEXT_PUBLIC_ENVIRONMENT=${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
        platforms: linux/amd64
