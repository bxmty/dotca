---
# Ansible playbook for configuring the QA environment for dotca
# Runs after Terraform has provisioned the infrastructure

- name: Configure QA environment for dotca
  hosts: digitalocean
  become: true
  vars:
    project_name: dotca-nextjs
    git_repo_url: "{{ lookup('env', 'GIT_REPO_URL') }}"
    git_branch: qa
    app_dir: /app
    public_ip: "{{ ansible_host }}"

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Upgrade all packages
      apt:
        upgrade: yes

    - name: Install Docker prerequisites
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - git
          - python3-pip
        state: present
        update_cache: yes

    - name: Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes

    - name: Install Docker Engine
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: yes

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Create application directory
      file:
        path: "{{ app_dir }}"
        state: directory
        mode: '0755'

    - name: Clone the repository
      git:
        repo: "{{ git_repo_url }}"
        dest: "{{ app_dir }}/repo"
        version: "{{ git_branch }}"
        force: yes

    - name: Create deploy script
      copy:
        dest: "{{ app_dir }}/deploy.sh"
        mode: '0755'
        content: |
          #!/bin/bash
          cd {{ app_dir }}/repo
          
          # Get the public IP address
          PUBLIC_IP={{ public_ip }}
          
          # Pull latest changes
          git pull origin {{ git_branch }}
          
          # Build the Docker image locally
          docker build \
            --build-arg NODE_ENV=production \
            --build-arg NEXT_PUBLIC_API_URL=http://$PUBLIC_IP/api \
            --build-arg NEXT_PUBLIC_ENVIRONMENT=qa \
            -t dotca_qa:latest .
          
          # Stop and remove any existing container
          docker stop dotca_qa || true
          docker rm dotca_qa || true
          
          # Run the new container
          docker run -d \
            --name dotca_qa \
            -p 80:3000 \
            -e NODE_ENV=production \
            -e NEXT_PUBLIC_API_URL=http://$PUBLIC_IP/api \
            -e NEXT_PUBLIC_ENVIRONMENT=qa \
            dotca_qa:latest

    - name: Run deploy script
      command: "{{ app_dir }}/deploy.sh"

    - name: Setup firewall (UFW)
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - '22'
        - '80'
        - '443'

    - name: Enable UFW
      ufw:
        state: enabled
        policy: deny